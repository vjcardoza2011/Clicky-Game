{"version":3,"sources":["components/Navbar.js","components/Header.js","components/CharacterCard/CharacterCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","score","topScore","Header","Component","Characters","onClick","clickedImage","id","alt","name","src","image","Wrapper","children","shuffle","array","i","length","j","Math","floor","random","_ref","App","state","characters","clickedCharacters","_this","indexOf","push","console","log","handleIncrement","makeShuffle","alert","setState","_this2","this","components_Navbar","components_Header","components_Wrapper_Wrapper","map","character","CharacterCard_CharacterCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"83DAWeA,SARA,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,uBAAjC,mBACAJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMM,MAApC,iBAAyDN,EAAMO,aCOxDC,0LARP,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,kGALKM,cCQNC,SARI,SAAAV,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,QAAS,kBAAMX,EAAMY,aAAaZ,EAAMa,MAC1DZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKW,IAAKd,EAAMe,KAAMC,IAAKhB,EAAMiB,YCD9BC,SAFC,SAAAlB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMmB,mBCKzD,SAASC,EAAQC,GACb,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEhB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgCM,EAAA,GAE5BP,EAAMG,GAFsBI,EAAA,GAI3C,OAAOP,MAqFMQ,6MA/EbC,MAAQ,CACNC,aACAzB,MAAO,EACPC,SAAU,EACVyB,kBAAmB,MAGrBpB,aAAe,SAAAC,GAEb,IAAImB,EAAoBC,EAAKH,MAAME,kBAC/B1B,EAAQ2B,EAAKH,MAAMxB,MACnBC,EAAW0B,EAAKH,MAAMvB,UAGa,IAAnCyB,EAAkBE,QAAQrB,IAE5BmB,EAAkBG,KAAKtB,GACvBuB,QAAQC,IAAIL,GAEZC,EAAKK,kBAELL,EAAKM,eACyB,KAArBN,EAAKH,MAAMxB,OACpBkC,MAAM,uBACNP,EAAKQ,SAAS,CACZnC,MAAO,EACP0B,kBAAmB,OAGrBC,EAAKQ,SAAS,CACZnC,MAAO,EACP0B,kBAAmB,KAErBI,QAAQC,IAAI,aACZG,MAAM,8DAGJlC,EAAQC,GACV0B,EAAKQ,SAAS,CACZlC,SAAUD,OAMhBgC,gBAAkB,WAEhBL,EAAKQ,SAAS,CAAEnC,MAAO2B,EAAKH,MAAMxB,MAAQ,OAI5CiC,YAAc,WACZN,EAAKQ,SAAS,CAAEV,WAAYX,EAAQW,8EAG7B,IAAAW,EAAAC,KACP,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,MAAOqC,KAAKb,MAAMxB,MAClBC,SAAUoC,KAAKb,MAAMvB,WAEvBN,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,KACGH,KAAKb,MAAMC,WAAWgB,IAAI,SAAAC,GAAS,OAClC/C,EAAAC,EAAAC,cAAC8C,EAAD,CACEC,IAAKF,EAAUnC,GACfA,GAAImC,EAAUnC,GACdE,KAAMiC,EAAUjC,KAChBE,MAAO+B,EAAU/B,MACjBL,aAAc8B,EAAK9B,0BAxEfH,aCbpB0C,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.927c8ff2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nconst Navbar = props => (\r\n    <div className=\"navbar sticky-top\">\r\n        <a className=\"navbar-brand\" href=\"/React-Clicky-Game/\">TWD Clicky Game</a>\r\n        <li className=\"score\">Score: {props.score} | Top Score: {props.topScore}</li>\r\n    </div>\r\n)\r\n \r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>The Walking Dead Clicky Game</h1>\r\n                <p>Click on an image to earn points, but don't click on an image more than once!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport \"./CharacterCard.css\";\r\n\r\nconst Characters = props => (\r\n    <div className=\"card\" onClick={() => props.clickedImage(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img alt={props.name} src={props.image} />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Characters;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React, { Component }  from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Characters from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\n\n//shuffle function for cards\nfunction shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  \n  \n  class App extends Component {\n  \n    state = {\n      characters,\n      score: 0,\n      topScore: 0,\n      clickedCharacters: []\n    };\n  \n    clickedImage = id => {\n      // assigns the state of the empty array to a \"let\" to be updated\n      let clickedCharacters = this.state.clickedCharacters;\n      let score = this.state.score;\n      let topScore = this.state.topScore;\n  \n      // if statement for the clicked image that has an id of the indexed characters\n      if (clickedCharacters.indexOf(id) === -1) {\n        // pushes that id into the array to be stored\n        clickedCharacters.push(id);\n        console.log(clickedCharacters);\n        // runs the score function\n        this.handleIncrement();\n        // run the reshuffle function after each click\n        this.makeShuffle();\n      } else if (this.state.score === 12) {\n        alert(\"You win! Great job!\")\n        this.setState({\n          score: 0,\n          clickedCharacters: []\n        });\n      } else {\n        this.setState({\n          score: 0,\n          clickedCharacters: []\n        });\n        console.log(\"duplicate\")\n        alert(\"Sorry you clicked the same character twice... start over!\")\n      }\n  \n      if (score > topScore) {\n        this.setState({\n          topScore: score\n        })\n      } \n    }\n  \n    // handleIncrement increases this.state.score by 1\n    handleIncrement = () => {\n      // setState updates a components states\n      this.setState({ score: this.state.score + 1 });\n    };\n  \n    // shuffle up the images\n    makeShuffle = () => {\n      this.setState({ characters: shuffle(characters) })\n    }\n\n    render() {\n      return (\n        <div>\n          <Navbar\n            score={this.state.score}\n            topScore={this.state.topScore}\n          />\n          <Header />\n          <Wrapper>\n            {this.state.characters.map(character => (\n              <Characters \n                key={character.id}\n                id={character.id}\n                name={character.name}\n                image={character.image}\n                clickedImage={this.clickedImage}\n              />\n            ))}\n          </Wrapper>\n        </div>\n      )\n    }\n  }\n  \n  export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}